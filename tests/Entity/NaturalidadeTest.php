<?php

namespace App\Tests\Entity;

use App\Entity\Naturalidade;
use PHPUnit\Framework\TestCase;

class NaturalidadeTest extends TestCase
{
    public function testCreateNaturalidade(): void
    {
        $naturalidade = new Naturalidade();
        $this->assertInstanceOf(Naturalidade::class, $naturalidade);
    }

    public function testNaturalidadeGettersAndSetters(): void
    {
        $naturalidade = new Naturalidade();
        $nome = "São Paulo";

        $naturalidade->setNome($nome);

        $this->assertEquals($nome, $naturalidade->getNome());
    }

    public function testNaturalidadeId(): void
    {
        $naturalidade = new Naturalidade();
        
        // Test that ID starts as null (will be generated by DB)
        $this->assertNull($naturalidade->getId());
    }

    public function testNaturalidadeMethodsExist(): void
    {
        $naturalidade = new Naturalidade();
        
        // Test that all required methods exist
        $this->assertTrue(method_exists($naturalidade, 'getId'));
        $this->assertTrue(method_exists($naturalidade, 'getNome'));
        $this->assertTrue(method_exists($naturalidade, 'setNome'));
    }

    public function testNaturalidadeVariousCities(): void
    {
        $naturalidade = new Naturalidade();
        
        // Test with different city naturalidades
        $naturalidades = [
            "São Paulo",
            "Rio de Janeiro",
            "Belo Horizonte",
            "Salvador",
            "Fortaleza",
            "Brasília",
            "Curitiba",
            "Recife",
            "Porto Alegre",
            "Manaus"
        ];
        
        foreach ($naturalidades as $nome) {
            $naturalidade->setNome($nome);
            $this->assertEquals($nome, $naturalidade->getNome());
        }
    }

    public function testNaturalidadeNomeLength(): void
    {
        $naturalidade = new Naturalidade();
        
        // Test with different nome lengths
        $shortName = "SP";
        $longName = "Feira de Santana";
        
        $naturalidade->setNome($shortName);
        $this->assertEquals($shortName, $naturalidade->getNome());
        
        $naturalidade->setNome($longName);
        $this->assertEquals($longName, $naturalidade->getNome());
    }

    public function testNaturalidadeSpecialCharacters(): void
    {
        $naturalidade = new Naturalidade();
        
        // Test with special characters in names
        $nomesEspeciais = [
            "São Paulo",
            "Ribeirão Preto", 
            "João Pessoa",
            "Santo André",
            "Mogi das Cruzes"
        ];
        
        foreach ($nomesEspeciais as $nome) {
            $naturalidade->setNome($nome);
            $this->assertEquals($nome, $naturalidade->getNome());
        }
    }

    public function testNaturalidadeStateCapitals(): void
    {
        $naturalidade = new Naturalidade();
        
        // Test with state capitals
        $capitais = [
            "São Paulo",      // SP
            "Rio de Janeiro", // RJ
            "Belo Horizonte", // MG
            "Salvador",       // BA
            "Fortaleza",      // CE
            "Brasília",       // DF
            "Curitiba",       // PR
            "Recife",         // PE
            "Porto Alegre",   // RS
            "Manaus"          // AM
        ];
        
        foreach ($capitais as $capital) {
            $naturalidade->setNome($capital);
            $this->assertEquals($capital, $naturalidade->getNome());
        }
    }
}
