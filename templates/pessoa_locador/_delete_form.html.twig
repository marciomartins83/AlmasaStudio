<?php

namespace App\Controller;

use App\Entity\PessoaLocador;
use App\Form\PessoaLocadorType;
use App\Repository\PessoaLocadorRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

#[Route('/pessoa-locador', name: 'app_pessoa_locador_')]
class PessoaLocadorController extends AbstractController
{
    #[Route('/', name: 'index', methods: ['GET'])]
    public function index(PessoaLocadorRepository $pessoaLocadorRepository): Response
    {
        return $this->render('pessoa_locador/index.html.twig', [
            'pessoa_locadores' => $pessoaLocadorRepository->findAll(),
        ]);
    }

    #[Route('/new', name: 'new', methods: ['GET', 'POST'])]
    public function new(Request $request, EntityManagerInterface $entityManager): Response
    {
        $pessoaLocador = new PessoaLocador();
        $form = $this->createForm(PessoaLocadorType::class, $pessoaLocador);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager->persist($pessoaLocador);
            $entityManager->flush();

            $this->addFlash('success', 'Pessoa Locador criada com sucesso!');
            return $this->redirectToRoute('app_pessoa_locador_index');
        }

        return $this->render('pessoa_locador/new.html.twig', [
            'pessoa_locador' => $pessoaLocador,
            'form' => $form,
        ]);
    }

    #[Route('/{id}/edit', name: 'edit', methods: ['GET', 'POST'])]
    public function edit(Request $request, PessoaLocador $pessoaLocador, EntityManagerInterface $entityManager): Response
    {
        $form = $this->createForm(PessoaLocadorType::class, $pessoaLocador);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager->flush();
            $this->addFlash('success', 'Pessoa Locador atualizada com sucesso!');
            return $this->redirectToRoute('app_pessoa_locador_index');
        }

        return $this->render('pessoa_locador/edit.html.twig', [
            'pessoa_locador' => $pessoaLocador,
            'form' => $form,
        ]);
    }

    #[Route('/{id}', name: 'delete', methods: ['POST'])]
    public function delete(Request $request, PessoaLocador $pessoaLocador, EntityManagerInterface $entityManager): Response
    {
        if ($this->isCsrfTokenValid('delete' . $pessoaLocador->getId(), $request->request->get('_token'))) {
            $entityManager->remove($pessoaLocador);
            $entityManager->flush();
            $this->addFlash('success', 'Pessoa Locador excluÃ­da com sucesso!');
        }

        return $this->redirectToRoute('app_pessoa_locador_index');
    }
} 